{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Chan/Desktop/HRIS/hris-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { AdminDashboardComponent } from './admin-dashboard.component';\ndescribe('AdminDashboardComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [AdminDashboardComponent]\n    }).compileComponents();\n    fixture = TestBed.createComponent(AdminDashboardComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should have correct title', () => {\n    expect(component.title).toBe('Personnel Management Dashboard');\n  });\n  it('should have recent employees', () => {\n    expect(component.recentEmployees).toBeDefined();\n    expect(component.recentEmployees.length).toBeGreaterThan(0);\n  });\n  it('should call onEditEmployee when edit is triggered', () => {\n    spyOn(console, 'log');\n    const mockEmployee = component.recentEmployees[0];\n    component.onEditEmployee(mockEmployee);\n    // You may want to check for navigation or modal open instead of console.log\n  });\n\n  it('should call onDeleteEmployee when delete is triggered', () => {\n    spyOn(window, 'confirm').and.returnValue(true);\n    const mockEmployee = component.recentEmployees[0];\n    component.onDeleteEmployee(mockEmployee);\n    // You may want to check for array update or confirmation dialog\n  });\n});","map":{"version":3,"names":["TestBed","AdminDashboardComponent","describe","component","fixture","beforeEach","_asyncToGenerator","configureTestingModule","imports","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","title","toBe","recentEmployees","toBeDefined","length","toBeGreaterThan","spyOn","console","mockEmployee","onEditEmployee","window","and","returnValue","onDeleteEmployee"],"sources":["C:\\Users\\Chan\\Desktop\\HRIS\\hris-frontend\\src\\app\\features\\personnel-information-management\\admin-dashboard\\admin-dashboard.component.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { AdminDashboardComponent } from './admin-dashboard.component';\n\ndescribe('AdminDashboardComponent', () => {\n  let component: AdminDashboardComponent;\n  let fixture: ComponentFixture<AdminDashboardComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [AdminDashboardComponent]\n    })\n    .compileComponents();\n    \n    fixture = TestBed.createComponent(AdminDashboardComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should have correct title', () => {\n    expect(component.title).toBe('Personnel Management Dashboard');\n  });\n\n  it('should have recent employees', () => {\n    expect(component.recentEmployees).toBeDefined();\n    expect(component.recentEmployees.length).toBeGreaterThan(0);\n  });\n\n  it('should call onEditEmployee when edit is triggered', () => {\n    spyOn(console, 'log');\n    const mockEmployee = component.recentEmployees[0];\n    component.onEditEmployee(mockEmployee);\n    // You may want to check for navigation or modal open instead of console.log\n  });\n\n  it('should call onDeleteEmployee when delete is triggered', () => {\n    spyOn(window, 'confirm').and.returnValue(true);\n    const mockEmployee = component.recentEmployees[0];\n    component.onDeleteEmployee(mockEmployee);\n    // You may want to check for array update or confirmation dialog\n  });\n});"],"mappings":";AAAA,SAA2BA,OAAO,QAAQ,uBAAuB;AACjE,SAASC,uBAAuB,QAAQ,6BAA6B;AAErEC,QAAQ,CAAC,yBAAyB,EAAE,MAAK;EACvC,IAAIC,SAAkC;EACtC,IAAIC,OAAkD;EAEtDC,UAAU,eAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMN,OAAO,CAACO,sBAAsB,CAAC;MACnCC,OAAO,EAAE,CAACP,uBAAuB;KAClC,CAAC,CACDQ,iBAAiB,EAAE;IAEpBL,OAAO,GAAGJ,OAAO,CAACU,eAAe,CAACT,uBAAuB,CAAC;IAC1DE,SAAS,GAAGC,OAAO,CAACO,iBAAiB;IACrCP,OAAO,CAACQ,aAAa,EAAE;EACzB,CAAC,EAAC;EAEFC,EAAE,CAAC,eAAe,EAAE,MAAK;IACvBC,MAAM,CAACX,SAAS,CAAC,CAACY,UAAU,EAAE;EAChC,CAAC,CAAC;EAEFF,EAAE,CAAC,2BAA2B,EAAE,MAAK;IACnCC,MAAM,CAACX,SAAS,CAACa,KAAK,CAAC,CAACC,IAAI,CAAC,gCAAgC,CAAC;EAChE,CAAC,CAAC;EAEFJ,EAAE,CAAC,8BAA8B,EAAE,MAAK;IACtCC,MAAM,CAACX,SAAS,CAACe,eAAe,CAAC,CAACC,WAAW,EAAE;IAC/CL,MAAM,CAACX,SAAS,CAACe,eAAe,CAACE,MAAM,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC;EAC7D,CAAC,CAAC;EAEFR,EAAE,CAAC,mDAAmD,EAAE,MAAK;IAC3DS,KAAK,CAACC,OAAO,EAAE,KAAK,CAAC;IACrB,MAAMC,YAAY,GAAGrB,SAAS,CAACe,eAAe,CAAC,CAAC,CAAC;IACjDf,SAAS,CAACsB,cAAc,CAACD,YAAY,CAAC;IACtC;EACF,CAAC,CAAC;;EAEFX,EAAE,CAAC,uDAAuD,EAAE,MAAK;IAC/DS,KAAK,CAACI,MAAM,EAAE,SAAS,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,IAAI,CAAC;IAC9C,MAAMJ,YAAY,GAAGrB,SAAS,CAACe,eAAe,CAAC,CAAC,CAAC;IACjDf,SAAS,CAAC0B,gBAAgB,CAACL,YAAY,CAAC;IACxC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}