{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nexport let EditEmployeeModalComponent = class EditEmployeeModalComponent {\n  constructor(fb, dialogRef, data) {\n    this.fb = fb;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.departments = ['IT', 'HR', 'Finance', 'Marketing', 'Operations', 'Engineering', 'Sales', 'Customer Support', 'Research', 'Legal', 'Product', 'Design'];\n    this.statuses = ['Active', 'On Leave', 'Terminated'];\n    this.editForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      department: ['', [Validators.required]],\n      position: ['', [Validators.required]],\n      hireDate: ['', [Validators.required]],\n      salary: ['', [Validators.required, Validators.min(0)]],\n      status: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    if (this.data.employee) {\n      this.editForm.patchValue({\n        name: this.data.employee.name,\n        email: this.data.employee.email,\n        department: this.data.employee.department,\n        position: this.data.employee.position,\n        hireDate: this.data.employee.hireDate,\n        salary: this.data.employee.salary,\n        status: this.data.employee.status\n      });\n    }\n  }\n  onSubmit() {\n    if (this.editForm.valid) {\n      const updatedEmployee = {\n        ...this.data.employee,\n        ...this.editForm.value\n      };\n      this.dialogRef.close(updatedEmployee);\n    }\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n};\nEditEmployeeModalComponent = __decorate([Component({\n  selector: 'app-edit-employee-modal',\n  templateUrl: './edit-employee-modal.component.html',\n  styleUrls: ['./edit-employee-modal.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatButtonModule, MatIconModule, MatDatepickerModule, MatNativeDateModule]\n}), __param(2, Inject(MAT_DIALOG_DATA))], EditEmployeeModalComponent);","map":{"version":3,"names":["Component","Inject","CommonModule","ReactiveFormsModule","Validators","MAT_DIALOG_DATA","MatDialogModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatButtonModule","MatIconModule","MatDatepickerModule","MatNativeDateModule","EditEmployeeModalComponent","constructor","fb","dialogRef","data","departments","statuses","editForm","group","name","required","email","department","position","hireDate","salary","min","status","ngOnInit","employee","patchValue","onSubmit","valid","updatedEmployee","value","close","onCancel","__decorate","selector","templateUrl","styleUrls","standalone","imports","__param"],"sources":["C:\\Users\\Chan\\Desktop\\HRIS\\hris-frontend\\src\\app\\features\\personnel-information-management\\edit-employee-modal\\edit-employee-modal.component.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  department: string;\r\n  position: string;\r\n  hireDate: Date;\r\n  salary: number;\r\n  status: 'Active' | 'On Leave' | 'Terminated';\r\n  profileImage?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-employee-modal',\r\n  templateUrl: './edit-employee-modal.component.html',\r\n  styleUrls: ['./edit-employee-modal.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ]\r\n})\r\nexport class EditEmployeeModalComponent implements OnInit {\r\n  editForm: FormGroup;\r\n  departments = [\r\n    'IT',\r\n    'HR',\r\n    'Finance',\r\n    'Marketing',\r\n    'Operations',\r\n    'Engineering',\r\n    'Sales',\r\n    'Customer Support',\r\n    'Research',\r\n    'Legal',\r\n    'Product',\r\n    'Design'\r\n  ];\r\n\r\n  statuses = ['Active', 'On Leave', 'Terminated'];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<EditEmployeeModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { employee: Employee }\r\n  ) {\r\n    this.editForm = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      department: ['', [Validators.required]],\r\n      position: ['', [Validators.required]],\r\n      hireDate: ['', [Validators.required]],\r\n      salary: ['', [Validators.required, Validators.min(0)]],\r\n      status: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.employee) {\r\n      this.editForm.patchValue({\r\n        name: this.data.employee.name,\r\n        email: this.data.employee.email,\r\n        department: this.data.employee.department,\r\n        position: this.data.employee.position,\r\n        hireDate: this.data.employee.hireDate,\r\n        salary: this.data.employee.salary,\r\n        status: this.data.employee.status\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.editForm.valid) {\r\n      const updatedEmployee = {\r\n        ...this.data.employee,\r\n        ...this.editForm.value\r\n      };\r\n      this.dialogRef.close(updatedEmployee);\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}